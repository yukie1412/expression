{"version":3,"sources":["service.tsx","Study.tsx","Review.tsx","const.tsx","Home.tsx","Detail.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getJson","JSONResult","getRandomIdx","total","Math","floor","random","getRandomQuestion","idx","word","keys","Object","filter","key","length","question","answer","getTotal","getQuestionSet","options","map","vocab","i","Study","useState","words","setWords","useEffect","Container","Typography","component","variant","align","color","gutterBottom","List","ListItem","button","href","ListItemText","primary","Review","setQuestion","selection","setSelection","solution","setSolution","getIcon","Card","CardContent","aria-label","option","onClick","toggleSolution","ListItemIcon","CardActions","Button","disabled","Constants","TITLE","ROUTES","title","link","Home","Grid","container","spacing","card","item","xs","sm","md","Link","Component","Detail","history","useHistory","location","useLocation","id","useParams","setVocab","data","index","parseInt","isNaN","window","replaceState","last","getVocabDetail","toPage","page","cur","push","toLast","toNext","styledListItem","text","arr","split","listContent","accordion","isObj","hasOwnProperty","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","obj","preface","content","direction","justify","alignItems","IconButton","theme","createMuiTheme","palette","main","secondary","useStyles","makeStyles","headerText","margin","NavBar","classes","AppBar","position","Toolbar","noWrap","className","style","marginLeft","route","App","basename","ThemeProvider","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","document","getElementById","hasChildNodes","hydrate","render"],"mappings":"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","file":"static/js/main.0a9f38c0.chunk.js","sourcesContent":["import { VocabObj, Question, QuestionSet } from './interfaces/vocabObj';\nimport JSONResult from './vocabObj.json';\n\nconst getJson = () => {\n  return JSONResult;\n}\n\nconst getRandomIdx = (total: number): number => {\n  return Math.floor(Math.random() * total);\n}\n\nconst getRandomQuestion = (idx: number): Question => {\n  const data = getJson();\n  const word: VocabObj = data[idx];\n  const keys = Object.keys(word).filter((key: string) => key !== 'word' && key !== 'situation');\n  const key = keys[getRandomIdx(keys.length)];\n  const question = word[key][getRandomIdx(word[key].length)];\n  return {\n    question,\n    answer: word.word\n  };\n}\n\nexport const getTotal = (): number => {\n  const data = getJson();\n  return data.length;\n}\n\nexport const getVocabs = () => {\n  const data = getJson();\n  return data.map((vocab: VocabObj, idx: number) => {\n    return {\n      idx,\n      word: vocab.word\n    };\n  });\n}\n\nexport const getVocabDetail = (idx: string): VocabObj => {\n  const data = getJson();\n  const index = parseInt(idx, 10);\n  if (isNaN(index) || index >= data.length) {\n    window.history.replaceState(null, data[0].word, '/study/0');\n    return data[0];\n  }\n  if (index < 0) {\n    const last = data.length - 1;\n    window.history.replaceState(null, data[last].word, `/study/${last}`);\n    return data[last];\n  }\n  return data[index];\n}\n\nexport const getQuestionSet = (): QuestionSet => {\n  const total = getTotal();\n  const idx = getRandomIdx(total);\n  const question = getRandomQuestion(idx);\n\n  const data = getJson(); // TODO: limit to 5\n  const options = data\n    .map((vocab: VocabObj, i: number) => i === idx ? question : getRandomQuestion(i));\n\n  return {\n    question,\n    options\n  };\n}\n","import React, { useState, useEffect } from 'react';\n\nimport Container from '@material-ui/core/Container';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\n\nimport { getVocabs } from './service';\n\ninterface IWord {\n  word: string;\n  idx: number;\n}\n\nfunction Study() {\n  const [words, setWords] = useState<IWord[]>([]);\n  useEffect(() => setWords(getVocabs()), []);\n\n  return (\n    <main>\n      <Container>\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>Study</Typography>\n\n        {words && (\n            <List component=\"nav\">\n              {\n                words.map((word: IWord, idx: number) => (\n                  <ListItem button component=\"a\" href={'/study/' + word.idx} key={idx}>\n                    <ListItemText primary={word.word} key={word.idx} />\n                  </ListItem>\n                ))\n              }\n            </List>\n          )\n        }\n      </Container>\n    </main>\n  );\n}\n\nexport default Study;\n","import React, { useState } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Container from '@material-ui/core/Container';\nimport List from '@material-ui/core/List';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\n\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\n\nimport { QuestionSet, Question } from './interfaces/vocabObj';\nimport { getQuestionSet } from './service';\n\nfunction Review() {\n  const [question, setQuestion] = useState<QuestionSet>(getQuestionSet());\n  const [selection, setSelection] = useState<number>(-1);\n  const [solution, setSolution] = useState<boolean>(false);\n\n  const getNext = () => {\n    setQuestion(getQuestionSet());\n    setSelection(-1);\n    setSolution(false);\n  }\n\n  const toggleSolution = (idx: number) => {\n    setSelection(selection === idx ? -1 : idx);\n  }\n\n  const getIcon = (idx: number) => {\n    if (solution) {\n      if (question.options[idx]\n        && question.options[idx].answer === question.question.answer) {\n        return <CheckCircleOutlineIcon />\n      }\n      return <HighlightOffIcon />\n    }\n\n    if (idx !== selection) {\n      return <RadioButtonUncheckedIcon />;\n    }\n    if (idx === selection && question.options[idx]\n      && question.options[idx].answer === question.question.answer) {\n      return <CheckCircleOutlineIcon />\n    }\n    return <HighlightOffIcon />\n  }\n\n  const renderCardContent = () => {\n    if (!question) { return ''; }\n\n    return (\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">{question.question.question}</Typography>\n\n        <List aria-label=\"Options\">\n          {\n            question.options.map((option: Question, idx: number) => (\n              <ListItem key={idx} button onClick={() => !solution && toggleSolution(idx)}>\n                <ListItemIcon>{getIcon(idx)}</ListItemIcon>\n                <ListItemText primary={option.answer} />\n              </ListItem>\n            ))\n          }\n        </List>\n      </CardContent>\n    )\n  }\n\n  return (\n    <main>\n      <Container>\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>Review</Typography>\n\n        <Card variant=\"outlined\">\n          {renderCardContent()}\n          <CardActions>\n            <Button variant=\"contained\" color=\"primary\" onClick={getNext}>Next</Button>\n            <Button variant=\"contained\" onClick={() => setSolution(true)}\n              disabled={solution}>Solution</Button>\n          </CardActions>\n        </Card>\n      </Container>\n    </main>\n  );\n}\n\nexport default Review;\n","import Study from './Study';\nimport Review from './Review';\n\nconst Constants = {\n  TITLE: 'Expression française courante',\n  ROUTES: [\n    {\n      title: 'Study',\n      link: '/study',\n      component: () => <Study />\n    },\n    {\n      title: 'Review',\n      link: '/review',\n      component: () => <Review />\n    }\n  ]\n};\n\nexport default Constants;\n","import React, { Component } from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n\nimport Constants from './const';\n\nclass Home extends Component {\n  render() {\n    return (\n      <main>\n        <Container>\n          <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>{Constants.TITLE}</Typography>\n\n          <Grid container spacing={4}>\n            {\n              Constants.ROUTES.map((card) => (\n                <Grid item key={card.title} xs={12} sm={6} md={4}>\n                  <Link href={card.link}>\n                    <Card>\n                      <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">{card.title}</Typography>\n                      </CardContent>\n                    </Card>\n                  </Link>\n                </Grid>\n              ))\n            }\n          </Grid>\n        </Container>\n      </main>\n    );\n  }\n}\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useHistory, useLocation } from 'react-router';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Container from '@material-ui/core/Container';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\n\nimport { getVocabDetail, getTotal } from './service';\nimport { VocabObj, Situation } from './interfaces/vocabObj';\n\ninterface IDetailParam {\n  id: string;\n}\n\nfunction Detail() {\n  const history = useHistory();\n  const location = useLocation();\n  const { id } = useParams<IDetailParam>();\n  const [vocab, setVocab] = useState<VocabObj>();\n  const total = getTotal();\n\n  useEffect(() => {\n    setVocab(getVocabDetail(id));\n  }, [location, id]);\n\n  const toPage = (page: 'next' | 'last') => {\n    let cur = parseInt(id, 10);\n    if (isNaN(cur)) {\n      cur = 0;\n    }\n    cur = page === 'next' ? cur + 1 : cur - 1;\n    if (cur < 0) {\n      cur = total - 1;\n    } else if (cur >= total) {\n      cur = 0;\n    }\n    history.push(`/study/${cur}`);\n  }\n\n  const toLast = () => {\n    toPage('last');\n  }\n\n  const toNext = () => {\n    toPage('next');\n  }\n\n  const styledListItem = (text: string) => {\n    if (!vocab) { return ''; }\n    const arr = text.split('_____');\n    if (arr.length === 1) {\n      return <div>{text}</div>\n    }\n    return <div>{arr[0]} <strong>{vocab.word}</strong> {arr[1]}</div>\n  };\n\n  const listContent = (arr: string[]) => (\n    <List aria-label=\"Content\">\n      {\n        arr.map((text: string, idx: number) => (\n          <ListItem key={idx}>\n            <ListItemText>\n              {styledListItem(text)}\n            </ListItemText>\n          </ListItem>\n        ))\n      }\n    </List>\n  )\n\n  const accordion = (key: string, isObj: boolean = false) => {\n    if (!vocab || !vocab.hasOwnProperty(key)) { return ''; }\n    return (\n      <Accordion key={key}>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={key}>\n          <Typography variant=\"h6\">{key}</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          {!isObj && listContent(vocab[key])}\n          {isObj && (<List aria-label=\"Situation\">\n            {vocab[key].map((obj: Situation, idx: number) => (\n              <div key={idx}>\n                <Typography variant=\"subtitle1\">{obj.preface}</Typography>\n                <ListItem>\n                  { listContent(obj.content) }\n                </ListItem>\n              </div>\n            ))}\n          </List>)}\n        </AccordionDetails>\n      </Accordion>\n    );\n  };\n\n  const content = () => {\n    if (vocab) {\n      return (\n        <Container>\n          <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"baseline\">\n            <IconButton color=\"primary\" aria-label=\"last vocab\" component=\"span\" onClick={toLast}>\n              <ChevronLeftIcon />\n            </IconButton>\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              {vocab.word}\n            </Typography>\n            <IconButton color=\"primary\" aria-label=\"next vocab\" component=\"span\" onClick={toNext}>\n              <ChevronRightIcon />\n            </IconButton>\n          </Grid>\n\n          {accordion('definition')}\n          {accordion('usage')}\n          {accordion('synonyms')}\n          {accordion('situation', true)}\n        </Container>\n      );\n    }\n    return '';\n  }\n\n  return <main>{content()}</main>;\n}\n\nexport default Detail;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Link from '@material-ui/core/Link';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport Home from './Home';\nimport Detail from './Detail';\nimport Constants from './const';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#01579b',\n    },\n    secondary: {\n      main: '#f50057',\n    },\n  },\n});\n\nconst useStyles = makeStyles(() => ({\n  headerText: {\n    color: 'white',\n    margin: theme.spacing(1, 1.5)\n  },\n}));\n\nfunction App() {\n  return (\n    <BrowserRouter basename=\"/expression\">\n      <ThemeProvider theme={theme}>\n        <NavBar />\n\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          {\n            Constants.ROUTES.map((route, idx) => (\n              <Route path={route.link} key={idx} exact component={route.component} />\n            ))\n          }\n          <Route path=\"/study/:id\" component={Detail} />\n        </Switch>\n      </ThemeProvider>\n    </BrowserRouter>\n  );\n}\n\nfunction NavBar() {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"relative\">\n      <Toolbar>\n        <Link href=\"/\">\n          <Typography variant=\"h6\" color=\"textPrimary\" noWrap className={classes.headerText}>{Constants.TITLE}</Typography>\n        </Link>\n\n        <nav style={{marginLeft: \"auto\"}}>\n          {\n            Constants.ROUTES.map((route, idx) => (\n              <Link variant=\"button\" color=\"textSecondary\" href={route.link} className={classes.headerText} key={idx}>{route.title}</Link>\n            ))\n          }\n        </nav>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { hydrate, render } from \"react-dom\";\n\n\nconst rootElement = document.getElementById('root');\nif (rootElement && rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}